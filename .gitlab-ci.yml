variables:
  REGISTRY: $CI_REGISTRY

stages:
  - build
  - test
  - sonar
  - deploy


build_backend:
  stage: build
  image: gcr.io/kaniko-project/executor:debug
  variables:
    DOCKER_CONFIG: /kaniko/.docker/
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/backend"
      --dockerfile "${CI_PROJECT_DIR}/backend/Dockerfile"
      --destination "$CI_REGISTRY_IMAGE/backend:$CI_PIPELINE_ID"

build_frontend:
  stage: build
  image: gcr.io/kaniko-project/executor:debug
  variables:
    DOCKER_CONFIG: /kaniko/.docker/
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/frontend/Dockerfile"
      --destination "$CI_REGISTRY_IMAGE/frontend:$CI_PIPELINE_ID"

unit_tests:
  stage: test
  image: golang:1.22
  script:
    - cd backend && go test ./...

sonar_scan:
  stage: sonar
  image: sonarsource/sonar-scanner-cli:latest
  script:
  - sonar-scanner -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN -Dsonar.projectKey=momo-store

deploy:
  stage: deploy
  image: alpine/helm:3.14.0
  script:
    - helm repo add nexus-helm $HELM_REPO_URL --username $NEXUS_USER --password $NEXUS_PASS
    - helm repo update
    - helm package infra/helm/momo-store --version $CI_PIPELINE_ID --app-version $CI_PIPELINE_ID
    - curl -u $NEXUS_USER:$NEXUS_PASS --upload-file momo-store-$CI_PIPELINE_ID.tgz $HELM_REPO_URL/
    - |
      helm upgrade --install momo-store momo-store-$CI_PIPELINE_ID.tgz \
        --set image.registry=$REGISTRY \
        --set backend.tag=$CI_PIPELINE_ID \
        --set frontend.tag=$CI_PIPELINE_ID \
        --kubeconfig "$KUBE_CONFIG"